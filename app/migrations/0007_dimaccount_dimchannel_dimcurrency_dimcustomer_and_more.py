# Generated by Django 5.0.6 on 2024-07-13 14:54

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0006_merge_20240706_2329'),
    ]

    operations = [
        migrations.CreateModel(
            name='DimAccount',
            fields=[
                ('AccountKey', models.IntegerField(primary_key=True, serialize=False)),
                ('ParentAccountKey', models.IntegerField(blank=True, null=True)),
                ('AccountLabel', models.CharField(blank=True, max_length=100, null=True)),
                ('AccountName', models.CharField(blank=True, max_length=50, null=True)),
                ('AccountDescription', models.CharField(blank=True, max_length=50, null=True)),
                ('AccountType', models.CharField(blank=True, max_length=50, null=True)),
                ('Operator', models.CharField(blank=True, max_length=50, null=True)),
                ('CustomMembers', models.CharField(blank=True, max_length=300, null=True)),
                ('ValueType', models.CharField(blank=True, max_length=50, null=True)),
                ('CustomMemberOptions', models.CharField(blank=True, max_length=200, null=True)),
                ('ETLLoadID', models.IntegerField(blank=True, null=True)),
                ('LoadDate', models.DateTimeField(blank=True, null=True)),
                ('UpdateDate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DimAccount',
            },
        ),
        migrations.CreateModel(
            name='DimChannel',
            fields=[
                ('ChannelKey', models.IntegerField(primary_key=True, serialize=False)),
                ('ChannelLabel', models.CharField(max_length=100)),
                ('ChannelName', models.CharField(blank=True, max_length=20, null=True)),
                ('ChannelDescription', models.CharField(blank=True, max_length=50, null=True)),
                ('ETLLoadID', models.IntegerField(blank=True, null=True)),
                ('LoadDate', models.DateTimeField(blank=True, null=True)),
                ('UpdateDate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DimChannel',
            },
        ),
        migrations.CreateModel(
            name='DimCurrency',
            fields=[
                ('CurrencyKey', models.IntegerField(primary_key=True, serialize=False)),
                ('CurrencyLabel', models.CharField(max_length=10)),
                ('CurrencyName', models.CharField(max_length=20)),
                ('CurrencyDescription', models.CharField(max_length=50)),
                ('ETLLoadID', models.IntegerField(blank=True, null=True)),
                ('LoadDate', models.DateTimeField(blank=True, null=True)),
                ('UpdateDate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DimCurrency',
            },
        ),
        migrations.CreateModel(
            name='DimCustomer',
            fields=[
                ('CustomerKey', models.IntegerField(primary_key=True, serialize=False)),
                ('GeographyKey', models.IntegerField()),
                ('CustomerLabel', models.CharField(max_length=100)),
                ('Title', models.CharField(blank=True, max_length=8, null=True)),
                ('FirstName', models.CharField(blank=True, max_length=50, null=True)),
                ('MiddleName', models.CharField(blank=True, max_length=50, null=True)),
                ('LastName', models.CharField(blank=True, max_length=50, null=True)),
                ('NameStyle', models.BooleanField(blank=True, null=True)),
                ('BirthDate', models.DateTimeField(blank=True, null=True)),
                ('MaritalStatus', models.CharField(blank=True, max_length=1, null=True)),
                ('Suffix', models.CharField(blank=True, max_length=10, null=True)),
                ('Gender', models.CharField(blank=True, max_length=1, null=True)),
                ('EmailAddress', models.CharField(blank=True, max_length=50, null=True)),
                ('YearlyIncome', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('TotalChildren', models.SmallIntegerField(blank=True, null=True)),
                ('NumberChildrenAtHome', models.SmallIntegerField(blank=True, null=True)),
                ('Education', models.CharField(blank=True, max_length=40, null=True)),
                ('Occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('HouseOwnerFlag', models.CharField(blank=True, max_length=1, null=True)),
                ('NumberCarsOwned', models.SmallIntegerField(blank=True, null=True)),
                ('AddressLine1', models.CharField(blank=True, max_length=120, null=True)),
                ('AddressLine2', models.CharField(blank=True, max_length=120, null=True)),
                ('Phone', models.CharField(blank=True, max_length=20, null=True)),
                ('DateFirstPurchase', models.DateTimeField(blank=True, null=True)),
                ('CustomerType', models.CharField(blank=True, max_length=15, null=True)),
                ('CompanyName', models.CharField(blank=True, max_length=100, null=True)),
                ('ETLLoadID', models.IntegerField(blank=True, null=True)),
                ('LoadDate', models.DateTimeField(blank=True, null=True)),
                ('UpdateDate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DimCustomer',
            },
        ),
        migrations.CreateModel(
            name='DimDate',
            fields=[
                ('Datekey', models.DateTimeField(primary_key=True, serialize=False)),
                ('FullDateLabel', models.CharField(max_length=20)),
                ('DateDescription', models.CharField(max_length=20)),
                ('CalendarYear', models.IntegerField()),
                ('CalendarYearLabel', models.CharField(max_length=20)),
                ('CalendarHalfYear', models.IntegerField()),
                ('CalendarHalfYearLabel', models.CharField(max_length=20)),
                ('CalendarQuarter', models.IntegerField()),
                ('CalendarQuarterLabel', models.CharField(max_length=20, null=True)),
                ('CalendarMonth', models.IntegerField()),
                ('CalendarMonthLabel', models.CharField(max_length=20)),
                ('CalendarWeek', models.IntegerField()),
                ('CalendarWeekLabel', models.CharField(max_length=20)),
                ('CalendarDayOfWeek', models.IntegerField()),
                ('CalendarDayOfWeekLabel', models.CharField(max_length=10)),
                ('FiscalYear', models.IntegerField()),
                ('FiscalYearLabel', models.CharField(max_length=20)),
                ('FiscalHalfYear', models.IntegerField()),
                ('FiscalHalfYearLabel', models.CharField(max_length=20)),
                ('FiscalQuarter', models.IntegerField()),
                ('FiscalQuarterLabel', models.CharField(max_length=20)),
                ('FiscalMonth', models.IntegerField()),
                ('FiscalMonthLabel', models.CharField(max_length=20)),
                ('IsWorkDay', models.CharField(max_length=20)),
                ('IsHoliday', models.IntegerField()),
                ('HolidayName', models.CharField(max_length=20)),
                ('EuropeSeason', models.CharField(max_length=50, null=True)),
                ('NorthAmericaSeason', models.CharField(max_length=50, null=True)),
                ('AsiaSeason', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'DimDate',
            },
        ),
        migrations.CreateModel(
            name='DimEmployee',
            fields=[
                ('EmployeeKey', models.IntegerField(primary_key=True, serialize=False)),
                ('ParentEmployeeKey', models.IntegerField(null=True)),
                ('FirstName', models.CharField(max_length=50)),
                ('LastName', models.CharField(max_length=50)),
                ('MiddleName', models.CharField(max_length=50, null=True)),
                ('Title', models.CharField(max_length=50, null=True)),
                ('HireDate', models.DateTimeField(null=True)),
                ('BirthDate', models.DateTimeField(null=True)),
                ('EmailAddress', models.CharField(max_length=50, null=True)),
                ('Phone', models.CharField(max_length=25, null=True)),
                ('MaritalStatus', models.CharField(max_length=1, null=True)),
                ('EmergencyContactName', models.CharField(max_length=50, null=True)),
                ('EmergencyContactPhone', models.CharField(max_length=25, null=True)),
                ('SalariedFlag', models.BooleanField(null=True)),
                ('Gender', models.CharField(max_length=1, null=True)),
                ('PayFrequency', models.SmallIntegerField(null=True)),
                ('BaseRate', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('VacationHours', models.SmallIntegerField(null=True)),
                ('CurrentFlag', models.BooleanField()),
                ('SalesPersonFlag', models.BooleanField()),
                ('DepartmentName', models.CharField(max_length=50, null=True)),
                ('StartDate', models.DateTimeField(null=True)),
                ('EndDate', models.DateTimeField(null=True)),
                ('Status', models.CharField(max_length=50, null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimEmployee',
            },
        ),
        migrations.CreateModel(
            name='DimEntity',
            fields=[
                ('EntityKey', models.IntegerField(primary_key=True, serialize=False)),
                ('EntityLabel', models.CharField(max_length=100, null=True)),
                ('ParentEntityKey', models.IntegerField(null=True)),
                ('ParentEntityLabel', models.CharField(max_length=100, null=True)),
                ('EntityName', models.CharField(max_length=50, null=True)),
                ('EntityDescription', models.CharField(max_length=100, null=True)),
                ('EntityType', models.CharField(max_length=100, null=True)),
                ('StartDate', models.DateTimeField(null=True)),
                ('EndDate', models.DateTimeField(null=True)),
                ('Status', models.CharField(max_length=50, null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimEntity',
            },
        ),
        migrations.CreateModel(
            name='DimGeography',
            fields=[
                ('GeographyKey', models.IntegerField(primary_key=True, serialize=False)),
                ('GeographyType', models.CharField(max_length=50)),
                ('ContinentName', models.CharField(max_length=50)),
                ('CityName', models.CharField(max_length=100, null=True)),
                ('StateProvinceName', models.CharField(max_length=100, null=True)),
                ('RegionCountryName', models.CharField(max_length=100, null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimGeography',
            },
        ),
        migrations.CreateModel(
            name='DimMachine',
            fields=[
                ('MachineKey', models.IntegerField(primary_key=True, serialize=False)),
                ('MachineLabel', models.CharField(max_length=100, null=True)),
                ('StoreKey', models.IntegerField()),
                ('MachineType', models.CharField(max_length=50)),
                ('MachineName', models.CharField(max_length=100)),
                ('MachineDescription', models.CharField(max_length=200)),
                ('VendorName', models.CharField(max_length=50)),
                ('MachineOS', models.CharField(max_length=50)),
                ('MachineSource', models.CharField(max_length=100)),
                ('MachineHardware', models.CharField(max_length=100, null=True)),
                ('MachineSoftware', models.CharField(max_length=100)),
                ('Status', models.CharField(max_length=50)),
                ('ServiceStartDate', models.DateTimeField()),
                ('DecommissionDate', models.DateTimeField(null=True)),
                ('LastModifiedDate', models.DateTimeField(null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimMachine',
            },
        ),
        migrations.CreateModel(
            name='DimOutage',
            fields=[
                ('OutageKey', models.IntegerField(primary_key=True, serialize=False)),
                ('OutageLabel', models.CharField(max_length=100)),
                ('OutageName', models.CharField(max_length=50)),
                ('OutageDescription', models.CharField(max_length=200)),
                ('OutageType', models.CharField(max_length=50)),
                ('OutageTypeDescription', models.CharField(max_length=200)),
                ('OutageSubType', models.CharField(max_length=50)),
                ('OutageSubTypeDescription', models.CharField(max_length=200)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimOutage',
            },
        ),
        migrations.CreateModel(
            name='DimProduct',
            fields=[
                ('ProductKey', models.IntegerField(primary_key=True, serialize=False)),
                ('ProductLabel', models.CharField(max_length=255, null=True)),
                ('ProductName', models.CharField(max_length=500, null=True)),
                ('ProductDescription', models.CharField(max_length=400, null=True)),
                ('ProductSubcategoryKey', models.IntegerField(null=True)),
                ('Manufacturer', models.CharField(max_length=50, null=True)),
                ('BrandName', models.CharField(max_length=50, null=True)),
                ('ClassID', models.CharField(max_length=10, null=True)),
                ('ClassName', models.CharField(max_length=20, null=True)),
                ('StyleID', models.CharField(max_length=10, null=True)),
                ('StyleName', models.CharField(max_length=20, null=True)),
                ('ColorID', models.CharField(max_length=10)),
                ('ColorName', models.CharField(max_length=20)),
                ('Size', models.CharField(max_length=50, null=True)),
                ('SizeRange', models.CharField(max_length=50, null=True)),
                ('SizeUnitMeasureID', models.CharField(max_length=20, null=True)),
                ('Weight', models.FloatField(null=True)),
                ('WeightUnitMeasureID', models.CharField(max_length=20, null=True)),
                ('UnitOfMeasureID', models.CharField(max_length=10, null=True)),
                ('UnitOfMeasureName', models.CharField(max_length=40, null=True)),
                ('StockTypeID', models.CharField(max_length=10, null=True)),
                ('StockTypeName', models.CharField(max_length=40, null=True)),
                ('UnitCost', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('UnitPrice', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('AvailableForSaleDate', models.DateTimeField(null=True)),
                ('StopSaleDate', models.DateTimeField(null=True)),
                ('Status', models.CharField(max_length=7, null=True)),
                ('ImageURL', models.CharField(max_length=150, null=True)),
                ('ProductURL', models.CharField(max_length=150, null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimProduct',
            },
        ),
        migrations.CreateModel(
            name='DimProductCategory',
            fields=[
                ('ProductCategoryKey', models.IntegerField(primary_key=True, serialize=False)),
                ('ProductCategoryLabel', models.CharField(max_length=100, null=True)),
                ('ProductCategoryName', models.CharField(max_length=30)),
                ('ProductCategoryDescription', models.CharField(max_length=50)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimProductCategory',
            },
        ),
        migrations.CreateModel(
            name='DimProductSubcategory',
            fields=[
                ('ProductSubcategoryKey', models.IntegerField(primary_key=True, serialize=False)),
                ('ProductSubcategoryLabel', models.CharField(max_length=100, null=True)),
                ('ProductSubcategoryName', models.CharField(max_length=50)),
                ('ProductSubcategoryDescription', models.CharField(max_length=100, null=True)),
                ('ProductCategoryKey', models.IntegerField(null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimProductSubcategory',
            },
        ),
        migrations.CreateModel(
            name='DimPromotion',
            fields=[
                ('PromotionKey', models.IntegerField(primary_key=True, serialize=False)),
                ('PromotionLabel', models.CharField(max_length=100, null=True)),
                ('PromotionName', models.CharField(max_length=100, null=True)),
                ('PromotionDescription', models.CharField(max_length=255, null=True)),
                ('DiscountPercent', models.FloatField(null=True)),
                ('PromotionType', models.CharField(max_length=50, null=True)),
                ('PromotionCategory', models.CharField(max_length=50, null=True)),
                ('StartDate', models.DateTimeField()),
                ('EndDate', models.DateTimeField(null=True)),
                ('MinQuantity', models.IntegerField(null=True)),
                ('MaxQuantity', models.IntegerField(null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimPromotion',
            },
        ),
        migrations.CreateModel(
            name='DimSalesTerritory',
            fields=[
                ('SalesTerritoryKey', models.IntegerField(primary_key=True, serialize=False)),
                ('GeographyKey', models.IntegerField()),
                ('SalesTerritoryLabel', models.CharField(max_length=100, null=True)),
                ('SalesTerritoryName', models.CharField(max_length=50)),
                ('SalesTerritoryRegion', models.CharField(max_length=50)),
                ('SalesTerritoryCountry', models.CharField(max_length=50)),
                ('SalesTerritoryGroup', models.CharField(max_length=50, null=True)),
                ('SalesTerritoryLevel', models.CharField(max_length=10, null=True)),
                ('SalesTerritoryManager', models.IntegerField(null=True)),
                ('StartDate', models.DateTimeField(null=True)),
                ('EndDate', models.DateTimeField(null=True)),
                ('Status', models.CharField(max_length=50, null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimSalesTerritory',
            },
        ),
        migrations.CreateModel(
            name='DimScenario',
            fields=[
                ('ScenarioKey', models.IntegerField(primary_key=True, serialize=False)),
                ('ScenarioLabel', models.CharField(max_length=100)),
                ('ScenarioName', models.CharField(max_length=20, null=True)),
                ('ScenarioDescription', models.CharField(max_length=50, null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimScenario',
            },
        ),
        migrations.CreateModel(
            name='DimStore',
            fields=[
                ('StoreKey', models.IntegerField(primary_key=True, serialize=False)),
                ('GeographyKey', models.IntegerField()),
                ('StoreManager', models.IntegerField(null=True)),
                ('StoreType', models.CharField(max_length=15, null=True)),
                ('StoreName', models.CharField(max_length=100)),
                ('StoreDescription', models.CharField(max_length=300)),
                ('Status', models.CharField(max_length=20)),
                ('OpenDate', models.DateTimeField()),
                ('CloseDate', models.DateTimeField(null=True)),
                ('EntityKey', models.IntegerField(null=True)),
                ('ZipCode', models.CharField(max_length=20, null=True)),
                ('ZipCodeExtension', models.CharField(max_length=10, null=True)),
                ('StorePhone', models.CharField(max_length=15, null=True)),
                ('StoreFax', models.CharField(max_length=14, null=True)),
                ('AddressLine1', models.CharField(max_length=100, null=True)),
                ('AddressLine2', models.CharField(max_length=100, null=True)),
                ('CloseReason', models.CharField(max_length=20, null=True)),
                ('EmployeeCount', models.IntegerField(null=True)),
                ('SellingAreaSize', models.FloatField(null=True)),
                ('LastRemodelDate', models.DateTimeField(null=True)),
                ('GeoLocation', models.CharField(max_length=50, null=True)),
                ('Geometry', models.CharField(max_length=50, null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'DimStore',
            },
        ),
        migrations.CreateModel(
            name='FactExchangeRate',
            fields=[
                ('ExchangeRateKey', models.IntegerField(primary_key=True, serialize=False)),
                ('CurrencyKey', models.IntegerField()),
                ('DateKey', models.DateTimeField()),
                ('AverageRate', models.FloatField()),
                ('EndOfDayRate', models.FloatField()),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'FactExchangeRate',
            },
        ),
        migrations.CreateModel(
            name='FactInventory',
            fields=[
                ('InventoryKey', models.IntegerField(primary_key=True, serialize=False)),
                ('DateKey', models.DateTimeField()),
                ('StoreKey', models.IntegerField()),
                ('ProductKey', models.IntegerField()),
                ('CurrencyKey', models.IntegerField()),
                ('OnHandQuantity', models.IntegerField()),
                ('OnOrderQuantity', models.IntegerField()),
                ('SafetyStockQuantity', models.IntegerField(null=True)),
                ('UnitCost', models.DecimalField(decimal_places=4, max_digits=19)),
                ('DaysInStock', models.IntegerField(null=True)),
                ('MinDayInStock', models.IntegerField(null=True)),
                ('MaxDayInStock', models.IntegerField(null=True)),
                ('Aging', models.IntegerField(null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'FactInventory',
            },
        ),
        migrations.CreateModel(
            name='FactITMachine',
            fields=[
                ('ITMachinekey', models.IntegerField(primary_key=True, serialize=False)),
                ('MachineKey', models.IntegerField()),
                ('Datekey', models.DateTimeField()),
                ('CostAmount', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('CostType', models.CharField(max_length=200)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'FactITMachine',
            },
        ),
        migrations.CreateModel(
            name='FactITSLA',
            fields=[
                ('ITSLAkey', models.IntegerField(primary_key=True, serialize=False)),
                ('DateKey', models.DateTimeField()),
                ('StoreKey', models.IntegerField()),
                ('MachineKey', models.IntegerField()),
                ('OutageKey', models.IntegerField()),
                ('OutageStartTime', models.DateTimeField()),
                ('OutageEndTime', models.DateTimeField()),
                ('DownTime', models.IntegerField()),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'FactITSLA',
            },
        ),
        migrations.CreateModel(
            name='FactOnlineSales',
            fields=[
                ('OnlineSalesKey', models.IntegerField(primary_key=True, serialize=False)),
                ('DateKey', models.DateTimeField()),
                ('StoreKey', models.IntegerField()),
                ('ProductKey', models.IntegerField()),
                ('PromotionKey', models.IntegerField()),
                ('CurrencyKey', models.IntegerField()),
                ('CustomerKey', models.IntegerField()),
                ('SalesOrderNumber', models.CharField(max_length=20)),
                ('SalesOrderLineNumber', models.IntegerField(null=True)),
                ('SalesQuantity', models.IntegerField()),
                ('SalesAmount', models.DecimalField(decimal_places=4, max_digits=19)),
                ('ReturnQuantity', models.IntegerField()),
                ('ReturnAmount', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('DiscountQuantity', models.IntegerField(null=True)),
                ('DiscountAmount', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('TotalCost', models.DecimalField(decimal_places=4, max_digits=19)),
                ('UnitCost', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('UnitPrice', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'FactOnlineSales',
            },
        ),
        migrations.CreateModel(
            name='FactSales',
            fields=[
                ('SalesKey', models.IntegerField(primary_key=True, serialize=False)),
                ('DateKey', models.DateTimeField()),
                ('channelKey', models.IntegerField()),
                ('StoreKey', models.IntegerField()),
                ('ProductKey', models.IntegerField()),
                ('PromotionKey', models.IntegerField()),
                ('CurrencyKey', models.IntegerField()),
                ('UnitCost', models.DecimalField(decimal_places=4, max_digits=19)),
                ('UnitPrice', models.DecimalField(decimal_places=4, max_digits=19)),
                ('SalesQuantity', models.IntegerField()),
                ('ReturnQuantity', models.IntegerField()),
                ('ReturnAmount', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('DiscountQuantity', models.IntegerField(null=True)),
                ('DiscountAmount', models.DecimalField(decimal_places=4, max_digits=19, null=True)),
                ('TotalCost', models.DecimalField(decimal_places=4, max_digits=19)),
                ('SalesAmount', models.DecimalField(decimal_places=4, max_digits=19)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'FactSales',
            },
        ),
        migrations.CreateModel(
            name='FactSalesQuota',
            fields=[
                ('SalesQuotaKey', models.IntegerField(primary_key=True, serialize=False)),
                ('ChannelKey', models.IntegerField()),
                ('StoreKey', models.IntegerField()),
                ('ProductKey', models.IntegerField()),
                ('DateKey', models.DateTimeField()),
                ('CurrencyKey', models.IntegerField()),
                ('ScenarioKey', models.IntegerField()),
                ('SalesQuantityQuota', models.DecimalField(decimal_places=4, max_digits=19)),
                ('SalesAmountQuota', models.DecimalField(decimal_places=4, max_digits=19)),
                ('GrossMarginQuota', models.DecimalField(decimal_places=4, max_digits=19)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'FactSalesQuota',
            },
        ),
        migrations.CreateModel(
            name='FactStrategyPlan',
            fields=[
                ('StrategyPlanKey', models.IntegerField(primary_key=True, serialize=False)),
                ('Datekey', models.DateTimeField()),
                ('EntityKey', models.IntegerField()),
                ('ScenarioKey', models.IntegerField()),
                ('AccountKey', models.IntegerField()),
                ('CurrencyKey', models.IntegerField()),
                ('ProductCategoryKey', models.IntegerField(null=True)),
                ('Amount', models.DecimalField(decimal_places=4, max_digits=19)),
                ('ETLLoadID', models.IntegerField(null=True)),
                ('LoadDate', models.DateTimeField(null=True)),
                ('UpdateDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'FactStrategyPlan',
            },
        ),
        migrations.AlterModelTable(
            name='soccerplayer',
            table='SoccerPlayer',
        ),
    ]
